AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    Online Hermes Inventory for AU

Globals:
    Function:
        MemorySize: 512

Resources:
    InventoryProfilerFunction:
        Type: AWS::Serverless::Function
        Properties:
            PackageType: Image
            Timeout: 60
            Architectures:
                - x86_64
            Events:
                ScheduleEvent:
                    Type: ScheduleV2
                    Properties:
                        ScheduleExpression: 'rate(10 minutes)'
            Policies:
                - DynamoDBCrudPolicy:
                      TableName: !Ref DynamoDBTable
                - SNSPublishMessagePolicy:
                      TopicName: !GetAtt SNSTopic.TopicName
                - AmazonAPIGatewayInvokeFullAccess
                - S3CrudPolicy:
                      BucketName: !Ref ImageS3Bucket
            Environment:
                Variables:
                    DYNAMODB_TABLE: !Ref DynamoDBTable
                    API_GATEWAY_REGION1: !Ref APIGatewayRegion1
                    SNS_TOPIC_ARN: !Ref SNSTopic
                    S3_BUCKET_NAME: !Ref ImageS3Bucket
        Metadata:
            Dockerfile: Dockerfile
            DockerContext: functions/hermes_profiler/
            DockerTag: python3.9-v1

    WeeklyExportFunction:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: functions/weekly_export/
            Handler: app.lambda_handler
            Runtime: python3.9
            Timeout: 60
            Policies:
                - DynamoDBCrudPolicy:
                      TableName: !Ref DynamoDBTable
                - S3CrudPolicy:
                      BucketName: !Ref ExportS3Bucket
            Environment:
                Variables:
                    DYNAMODB_TABLE_NAME: !Ref DynamoDBTable
                    S3_BUCKET_NAME: !Ref ExportS3Bucket
            Events:
                ScheduleEvent:
                    Type: ScheduleV2
                    Properties:
                        ScheduleExpression: cron(0 0 ? * FRI *)

    ExportS3Bucket:
        Type: AWS::S3::Bucket
        Properties:
            BucketName: hermes-inventory-export
            PublicAccessBlockConfiguration:
                BlockPublicAcls: false
                BlockPublicPolicy: false
                IgnorePublicAcls: false
                RestrictPublicBuckets: false

    ExportS3BucketPolicy:
        Type: AWS::S3::BucketPolicy
        Properties:
            Bucket: !Ref ExportS3Bucket
            PolicyDocument:
                Version: '2012-10-17'
                Statement:
                    - Effect: Allow
                      Principal: '*'
                      Action: s3:GetObject
                      Resource: !Sub 'arn:aws:s3:::${ExportS3Bucket}/*'

    ImageS3Bucket:
        Type: AWS::S3::Bucket
        Properties:
            BucketName: hermes-inventory-images
            PublicAccessBlockConfiguration:
                BlockPublicAcls: true
                BlockPublicPolicy: true
                IgnorePublicAcls: true
                RestrictPublicBuckets: true

    APIGatewayRegion1:
        Type: AWS::Serverless::Api
        Properties:
            StageName: prod
            EndpointConfiguration:
                Type: REGIONAL
            OpenApiVersion: '3.0.1'
            Auth:
                DefaultAuthorizer: AWS_IAM
            DefinitionBody:
                openapi: '3.0.1'
                info:
                    title: 'APIGatewayRegion1'
                paths:
                    /:
                        get:
                            x-amazon-apigateway-integration:
                                uri: 'https://www.hermes.com/au/en/category/women/bags-and-small-leather-goods/bags-and-clutches/'
                                httpMethod: 'GET'
                                type: 'http_proxy'
                                requestParameters:
                                    integration.request.header.X-My-X-Forwarded-For: "'4.4.4.4'"
                                    integration.request.header.referer: "'https://www.hermes.com/au/en/'"
                                responses: {}

    DynamoDBTable:
        Type: AWS::DynamoDB::Table
        Properties:
            AttributeDefinitions:
                - AttributeName: uuid
                  AttributeType: S
                - AttributeName: timestamp
                  AttributeType: N
                - AttributeName: item_id
                  AttributeType: S
            KeySchema:
                - AttributeName: uuid
                  KeyType: HASH
            GlobalSecondaryIndexes:
                - IndexName: ItemIdIndex
                  KeySchema:
                      - AttributeName: item_id
                        KeyType: HASH
                      - AttributeName: timestamp
                        KeyType: RANGE
                  Projection:
                      ProjectionType: ALL
            BillingMode: PAY_PER_REQUEST
            PointInTimeRecoverySpecification:
                PointInTimeRecoveryEnabled: true

    SNSTopic:
        Type: AWS::SNS::Topic
        Properties:
            DisplayName: HermesInventoryAU
